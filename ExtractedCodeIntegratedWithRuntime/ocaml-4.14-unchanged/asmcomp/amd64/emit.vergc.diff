--- emit.mlp.bak	2025-09-05 15:17:05.613827872 +0530
+++ emit.mlp	2025-09-05 17:51:50.707847009 +0530
@@ -594,34 +594,11 @@
       end
   | Lop(Ialloc { bytes = n; dbginfo }) ->
       assert (n <= (Config.max_young_wosize + 1) * Arch.size_addr);
-      if env.f.fun_fast then begin
-        I.sub (int n) r15;
-        I.cmp (domain_field Domainstate.Domain_young_limit) r15;
-        let lbl_call_gc = new_label() in
-        let lbl_frame =
-          record_frame_label env i.live (Dbg_alloc dbginfo)
-        in
-        I.jb (label lbl_call_gc);
-        let lbl_after_alloc = new_label() in
-        def_label lbl_after_alloc;
-        I.lea (mem64 NONE 8 R15) (res i 0);
-        env.call_gc_sites <-
-          { gc_lbl = lbl_call_gc;
-            gc_return_lbl = lbl_after_alloc;
-            gc_frame_lbl = lbl_frame; } :: env.call_gc_sites
-      end else begin
-        begin match n with
-        | 16 -> emit_call "caml_alloc1"
-        | 24 -> emit_call "caml_alloc2"
-        | 32 -> emit_call "caml_alloc3"
-        | _  ->
-            I.sub (int n) r15;
-            emit_call "caml_allocN"
-        end;
+            I.mov (int n) (Reg64 RDI);
+            emit_call "caml_allocN";
         let label = record_frame_label env i.live (Dbg_alloc dbginfo) in
         def_label label;
-        I.lea (mem64 NONE 8 R15) (res i 0)
-      end
+        I.lea (mem64 NONE 8 RAX) (res i 0)
   | Lop(Ipoll { return_label }) ->
       I.cmp (domain_field Domainstate.Domain_young_limit) r15;
       let gc_call_label = new_label () in
